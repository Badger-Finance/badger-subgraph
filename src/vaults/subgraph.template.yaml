specVersion: 0.0.3
description: "Badger is a decentralized autonomous organization (DAO) with a single purpose: build the products and infrastructure necessary to accelerate Bitcoin as collateral across other blockchains."
repository: https://github.com/Badger-Finance/badger-subgraph/tree/master/subgraphs/setts
schema:
  file: ./schema.graphql
dataSources:
  {{#registry}}
  - kind: ethereum/contract
    name: VaultRegistry
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: VaultRegistry
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - Token
      abis:
        - name: VaultRegistry
          file: ./abis/VaultRegistry.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: BadgerSett
          file: ./abis/BadgerSett.json
        - name: BadgerController
          file: ./abis/BadgerController.json
        - name: BadgerStrategy
          file: ./abis/BadgerStrategy.json
        - name: BadgerSettV1_5
          file: ./abis/BadgerSettV1_5.json
        - name: BadgerStrategyV1_5
          file: ./abis/BadgerStrategyV1_5.json
      eventHandlers:
        - event: AddKey(string)
          handler: handleAddKey
        - event: AddVersion(string)
          handler: handleAddVersion
        - event: NewVault(address,string,address)
          handler: handleNewVault
        - event: PromoteVault(address,string,address,uint8)
          handler: handlePromoteVault
        - event: RemoveVault(address,string,address)
          handler: handleRemoveVault
        - event: DemoteVault(address,string,address,uint8)
          handler: handleDemoteVault
        - event: Set(string,address)
          handler: handleSet
      file: ./src/handlers/registry-handler.ts
  {{/registry}}
  {{#registryV2}}
  - kind: ethereum/contract
    name: VaultRegistryV2
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: VaultRegistryV2
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - Token
      abis:
        - name: VaultRegistryV2
          file: ./abis/VaultRegistryV2.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: BadgerSett
          file: ./abis/BadgerSett.json
        - name: BadgerController
          file: ./abis/BadgerController.json
        - name: BadgerStrategy
          file: ./abis/BadgerStrategy.json
        - name: BadgerSettV1_5
          file: ./abis/BadgerSettV1_5.json
        - name: BadgerStrategyV1_5
          file: ./abis/BadgerStrategyV1_5.json
      eventHandlers:
        - event: NewVault(address,string,string,address)
          handler: handleNewVault
        - event: PromoteVault(address,string,string,address,uint8)
          handler: handlePromoteVault
        - event: PurgeVault(address,string,string,address,uint8)
          handler: handlePurgeVault
        - event: DemoteVault(address,string,string,address,uint8)
          handler: handleDemoteVault
        - event: Set(string,address)
          handler: handleSet
      file: ./src/handlers/registry-v2-handler.ts
  {{/registryV2}}
  {{#setts}}
  - kind: ethereum/contract
    name: {{ name }}
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: BadgerSett
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
        - Strategy
        - Controller
      abis:
        - name: BadgerSett
          file: ./abis/BadgerSett.json
        - name: BadgerStrategy
          file: ./abis/BadgerStrategy.json
        - name: BadgerController
          file: ./abis/BadgerController.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/handlers/sett-handler.ts
  {{/setts}}
  {{#affiliateSetts}}
  - kind: ethereum/contract
    name: {{ name }}
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: BadgerAffiliateSett
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
        - Strategy
        - Controller
      abis:
        - name: BadgerAffiliateSett
          file: ./abis/BadgerAffiliateSett.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/handlers/sett-affiliate-handler.ts
  {{/affiliateSetts}}
  {{#badgerSetts}}
  - kind: ethereum/contract
    name: {{ name }}
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: BadgerSettV1_5
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
        - Strategy
        - Controller
      abis:
        - name: BadgerSett
          file: ./abis/BadgerSett.json
        - name: BadgerStrategy
          file: ./abis/BadgerStrategy.json
        - name: BadgerController
          file: ./abis/BadgerController.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: TreeDistribution(indexed address,uint256,indexed uint256,uint256)
          handler: handleTreeDistributionV1_5
      file: ./src/handlers/sett-v1-5-handler.ts
  {{/badgerSetts}}
  {{#forwarder}}
  - kind: ethereum
    name: HarvestForwarder
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: HarvestForwarder
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TreeDistribution
        - TreeUpdate
        - OwnerUpdate
        - Sweep
      abis:
        - name: HarvestForwarder
          file: ./abis/HarvestForwarder.json
      eventHandlers:
        - event: TreeDistribution(indexed address,uint256,indexed uint256,uint256,address)
          handler: handleTreeDistribution
        - event: TreeUpdate(address,address)
          handler: handleTreeUpdate
        - event: OwnerUpdate(address,address)
          handler: handleOwnerUpdate
        - event: Sweep(address,uint256)
          handler: handleSweep
      file: ./src/handlers/harvest-forwarder-handler.ts
  {{/forwarder}}
  {{#bribeProcessor}}
  - kind: ethereum
    name: BribeProcessor
    network: {{ chain }}
    source:
      address: "{{ address }}"
      abi: VotiumBribeProcessor
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TreeDistribution
      abis:
        - name: VotiumBribeProcessor
          file: ./abis/VotiumBribeProcessor.json
      eventHandlers:
        - event: TreeDistribution(indexed address,uint256,indexed uint256,uint256)
          handler: handleTreeDistribution
      file: ./src/handlers/bribe-processor-handler.ts
  {{/bribeProcessor}}

templates:
  - kind: ethereum/contract
    name: SettVault
    network: {{ chain }}
    source:
      abi: BadgerSett
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
      abis:
        - name: BadgerSett
          file: ./abis/BadgerSett.json
        - name: BadgerStrategy
          file: ./abis/BadgerStrategy.json
        - name: BadgerController
          file: ./abis/BadgerController.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/handlers/sett-handler.ts
  - kind: ethereum/contract
    name: AffiliateSettVault
    network: {{ chain }}
    source:
      abi: BadgerAffiliateSett
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
        - Strategy
        - Controller
      abis:
        - name: BadgerAffiliateSett
          file: ./abis/BadgerAffiliateSett.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Burn(indexed address,uint256)
          handler: handleBurn
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Mint(indexed address,uint256)
          handler: handleMint
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: UpdateGuestList(address)
          handler: handleUpdateGuestList
        - event: Withdraw(indexed address,uint256)
          handler: handleWithdraw
      file: ./src/handlers/sett-affiliate-handler.ts
  - kind: ethereum/contract
    name: BadgerStrategy
    network: {{ chain }}
    source:
      abi: BadgerStrategy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
        - Strategy
        - Controller
      abis:
        - name: BadgerSett
          file: ./abis/BadgerSett.json
        - name: BadgerStrategy
          file: ./abis/BadgerStrategy.json
        - name: BadgerController
          file: ./abis/BadgerController.json
        - name: BadgerStrategyV1_5
          file: ./abis/BadgerStrategyV1_5.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: ExtraRewardsTokenSet(indexed address,uint256,uint256,uint256,address,uint256)
          handler: handleExtraRewardsTokenSet
        - event: Harvest(uint256,indexed uint256)
          handler: handleHarvest
        - event: Paused(address)
          handler: handlePaused
        - event: PerformanceFeeGovernance(indexed address,indexed address,uint256,indexed uint256,uint256)
          handler: handlePerformanceFeeGovernance
        - event: PerformanceFeeStrategist(indexed address,indexed address,uint256,indexed uint256,uint256)
          handler: handlePerformanceFeeStrategist
        - event: SetController(address)
          handler: handleSetController
        - event: SetGovernance(address)
          handler: handleSetGovernance
        - event: SetPerformanceFeeGovernance(uint256)
          handler: handleSetPerformanceFeeGovernance
        - event: SetPerformanceFeeStrategist(uint256)
          handler: handleSetPerformanceFeeStrategist
        - event: SetStrategist(address)
          handler: handleSetStrategist
        - event: SetWithdrawalFee(uint256)
          handler: handleSetWithdrawalFee
        - event: Tend(uint256)
          handler: handleTend
        - event: TendState(uint256,uint256,uint256)
          handler: handleTendState
        - event: TokenSwapPathSet(address,address,address[])
          handler: handleTokenSwapPathSet
        - event: TreeDistribution(indexed address,uint256,indexed uint256,uint256)
          handler: handleTreeDistribution
        - event: HarvestState(uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleSushiTreeDistribution
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: Withdraw(uint256)
          handler: handleWithdraw
        - event: WithdrawAll(uint256)
          handler: handleWithdrawAll
        - event: WithdrawOther(address,uint256)
          handler: handleWithdrawOther
        - event: WithdrawState(uint256,uint256,uint256,uint256)
          handler: handleWithdrawState
      file: ./src/handlers/strategy-handler.ts
  - kind: ethereum/contract
    name: BadgerSettV1_5
    network: {{ chain }}
    source:
      abi: BadgerSettV1_5
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Sett
        - User
        - Token
        - UserSettBalance
        - Strategy
        - Controller
      abis:
        - name: BadgerSettV1_5
          file: ./abis/BadgerSettV1_5.json
        - name: BadgerStrategyV1_5
          file: ./abis/BadgerStrategyV1_5.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: Harvested(indexed address,uint256,indexed uint256,uint256)
          handler: handleHarvested
        - event: PauseDeposits(indexed address)
          handler: handlePauseDeposits
        - event: Paused(address)
          handler: handlePaused
        - event: SetGuardian(indexed address)
          handler: handleSetGuardian
        - event: SetGuestList(indexed address)
          handler: handleSetGuestList
        - event: SetManagementFee(uint256)
          handler: handleSetManagementFee
        - event: SetMaxManagementFee(uint256)
          handler: handleSetMaxManagementFee
        - event: SetMaxPerformanceFee(uint256)
          handler: handleSetMaxPerformanceFee
        - event: SetMaxWithdrawalFee(uint256)
          handler: handleSetMaxWithdrawalFee
        - event: SetPerformanceFeeGovernance(uint256)
          handler: handleSetPerformanceFeeGovernance
        - event: SetPerformanceFeeStrategist(uint256)
          handler: handleSetPerformanceFeeStrategist
        - event: SetStrategy(indexed address)
          handler: handleSetStrategy
        - event: SetToEarnBps(uint256)
          handler: handleSetToEarnBps
        - event: SetTreasury(indexed address)
          handler: handleSetTreasury
        - event: SetWithdrawalFee(uint256)
          handler: handleSetWithdrawalFee
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: TreeDistribution(indexed address,uint256,indexed uint256,uint256)
          handler: handleTreeDistributionV1_5
        - event: UnpauseDeposits(indexed address)
          handler: handleUnpauseDeposits
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/handlers/sett-v1-5-handler.ts
