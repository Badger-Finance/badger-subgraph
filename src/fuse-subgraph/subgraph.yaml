specVersion: 0.0.2
description:  Fuse is an open interest rate protocol that supports any asset.
repository: https://github.com/platocrat/fuse-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: FusePoolDirectory
    network: mainnet
    source:
      address: '0x835482FE0532f169024d5E9410199369aAD5C77E'
      abi: FusePoolDirectory
      startBlock: 12059666
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      # Need to finish mappings for this 
      file: ./src/mappings/fusePoolDirectory.ts
      entities:
        # - FusePoolDirectory
        - Pool # Add `FusePool` entity to `./schema.graphql`
      abis:
        - name: FusePoolDirectory
          file: ./abis/Fuse/FusePoolDirectory.json
        - name: Comptroller
          file: ./abis/Comptroller.json
      eventHandlers:
        - event: PoolRegistered(uint256,(string,address,address,uint256,uint256))
          handler: handlePoolRegistered

templates:
  - name: Comptroller
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Comptroller
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/comptroller.ts
      entities:
        - Comptroller
        - Market
      abis:
        - name: Comptroller
          file: ./abis/Comptroller.json
        - name: CToken
          file: ./abis/CToken.json
        - name: PriceOracle # previously, PriceOracle
          file: ./abis/Oracles/PriceOracle.json # previously, ./abis/priceOracle.json
        - name: MasterPriceOracle # previously, PriceOracle2
          file: ./abis/Oracles/MasterPriceOracle.json # previously, ./abis/priceOracle2.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: MarketListed(address)
          handler: handleMarketListed
        - event: MarketEntered(address,address)
          handler: handleMarketEntered
        - event: MarketExited(address,address)
          handler: handleMarketExited
        - event: NewCloseFactor(uint256,uint256)
          handler: handleNewCloseFactor
        - event: NewCollateralFactor(address,uint256,uint256)
          handler: handleNewCollateralFactor
        - event: NewLiquidationIncentive(uint256,uint256)
          handler: handleNewLiquidationIncentive
        # - event: NewPauseGuardian(address,address)
        #   handler: handleNewPauseGuardian
        - event: NewPriceOracle(address,address)
          handler: handleNewPriceOracle

  - name: CToken
    kind: ethereum/contract
    network: mainnet
    source:
      abi: CToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/cToken.ts
      entities:
        - User
        - Market
        - CTokenInfo
      abis:
        - name: CToken
          file: ./abis/CToken.json
        - name: PriceOracle
          file: ./abis/Oracles/PriceOracle.json
        - name: MasterPriceOracle
          file: ./abis/Oracles/MasterPriceOracle.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Mint(address,uint256,uint256)
          handler: handleMint
        - event: Redeem(address,uint256,uint256)
          handler: handleRedeem
        - event: Borrow(address,uint256,uint256,uint256)
          handler: handleBorrow
        - event: RepayBorrow(address,address,uint256,uint256,uint256)
          handler: handleRepayBorrow
        - event: LiquidateBorrow(address,address,uint256,address,uint256)
          handler: handleLiquidateBorrow
        # - event: AccrueInterest(uint256,uint256,uint256)
        #   handler: handleAccrueInterest
        - event: NewReserveFactor(uint256,uint256)
          handler: handleNewReserveFactor
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: NewMarketInterestRateModel(address,address)
          handler: handleNewMarketInterestRateModel
