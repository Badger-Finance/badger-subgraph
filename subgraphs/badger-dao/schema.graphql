#####################
# Interfaces
#####################

interface ERC20 {
  id: ID!
  name: String!
  symbol: String!
  decimals: BigInt!
  totalSupply: BigInt!
}

interface Vault {
  id: ID!
  token: Token!
  balance: BigInt!
  pricePerFullShare: BigInt!
}

interface VaultBalance {
  id: ID!
  netDeposit: BigInt!
  netShareDeposit: BigInt!
  grossDeposit: BigInt!
  grossShareDeposit: BigInt!
  grossWithdraw: BigInt!
  grossShareWithdraw: BigInt!
}

interface Snapshot {
  id: ID!
  timestamp: Int!
}

#####################
# Entities
#####################

type Token implements ERC20 @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: BigInt!
  totalSupply: BigInt!
}

type Sett implements ERC20 & Vault & VaultBalance @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: BigInt!
  totalSupply: BigInt!
  token: Token!
  balance: BigInt!
  pricePerFullShare: BigInt!
  netDeposit: BigInt!
  netShareDeposit: BigInt!
  grossDeposit: BigInt!
  grossShareDeposit: BigInt!
  grossWithdraw: BigInt!
  grossShareWithdraw: BigInt!
}

type SettSnapshot implements ERC20 & Vault & VaultBalance & Snapshot @entity {
  id: ID!
  timestamp: Int!
  name: String!
  symbol: String!
  decimals: BigInt!
  totalSupply: BigInt!
  token: Token!
  balance: BigInt!
  pricePerFullShare: BigInt!
  netDeposit: BigInt!
  netShareDeposit: BigInt!
  grossDeposit: BigInt!
  grossShareDeposit: BigInt!
  grossWithdraw: BigInt!
  grossShareWithdraw: BigInt!
}

type UserSettBalance implements VaultBalance @entity {
  id: ID!
  user: User!
  sett: Sett!
  netDeposit: BigInt!
  netShareDeposit: BigInt!
  grossDeposit: BigInt!
  grossShareDeposit: BigInt!
  grossWithdraw: BigInt!
  grossShareWithdraw: BigInt!
}

type Transfer implements Snapshot @entity {
  id: ID!
  timestamp: Int!
  from: String!
  to: String!
  amount: BigInt!
}

type User @entity {
  id: ID!
  settBalances: [UserSettBalance!]! @derivedFrom(field: "user")
}
